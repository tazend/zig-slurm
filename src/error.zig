const c = @import("c.zig").c;
const std = @import("std");
const CStr = @import("common.zig").CStr;

const SLURM_SUCCESS: c_int = 0;

pub const ErrorEntry = struct {
    code: c_int,
    name: [:0]const u8,
    description: [:0]const u8,
};

const RawEntry = struct { Error, c_int, [:0]const u8 };

pub fn toEntry(errt: Error) ErrorEntry {
    inline for (entries) |entry| {
        if (entry[0] == errt) {
            return .{
                .code = entry[1],
                .name = @errorName(entry[0]),
                .description = entry[2],
            };
        }
    }
    unreachable;
}

pub fn checkRpc(errno: c_int) Error!void {
    if (errno == SLURM_SUCCESS) return;

    // This must find an entry, since they are getting auto-generated from the
    // source.
    inline for (entries) |entry| {
        if (entry[1] == errno) return entry[0];
    }

    unreachable;
}

pub fn getError() Error!void {
    return checkRpc(std.c._errno().*);
}

// TODO: Maybe categorize them at some point.
pub const Error = error{
    UnexpectedMsg,
    CommunicationsConnection,
    CommunicationsSend,
    CommunicationsReceive,
    CommunicationsShutdown,
    ProtocolVersion,
    ProtocolIoStreamVersion,
    ProtocolAuthentication,
    ProtocolInsaneMsgLength,
    MpiPluginNameInvalid,
    MpiPluginPrelaunchSetupFailed,
    PluginNameInvalid,
    UnknownForwardAddr,
    CommunicationsMissingSocket,
    CommunicationsInvalidIncomingFd,
    CommunicationsInvalidOutgoingFd,
    CommunicationsInvalidFd,
    SlurmctldCommunicationsConnection,
    SlurmctldCommunicationsSend,
    SlurmctldCommunicationsReceive,
    SlurmctldCommunicationsShutdown,
    SlurmctldCommunicationsBackoff,
    SlurmctldCommunicationsHardDrop,
    NoChangeInData,
    InvalidPartitionName,
    DefaultPartitionNotSet,
    AccessDenied,
    JobMissingRequiredPartitionGroup,
    RequestedNodesNotInPartition,
    TooManyRequestedCpus,
    InvalidNodeCount,
    OnDescToRecordCopy,
    JobMissingSizeSpecification,
    JobScriptMissing,
    UserIdMissing,
    DuplicateJobId,
    PathnameTooLong,
    NotTopPriority,
    RequestedNodeConfigUnavailable,
    RequestedPartConfigUnavailable,
    NodesBusy,
    InvalidJobId,
    InvalidNodeName,
    WritingToFile,
    TransitionStateNoUpdate,
    AlreadyDone,
    InterconnectFailure,
    BadDist,
    JobPending,
    BadTaskCount,
    InvalidJobCredential,
    InStandbyMode,
    InvalidNodeState,
    InvalidFeature,
    InvalidAuthtypeChange,
    ActiveFeatureNotSubset,
    InvalidSchedtypeChange,
    InvalidSelecttypeChange,
    InvalidSwitchtypeChange,
    Fragmentation,
    NotSupported,
    Disabled,
    Dependency,
    BatchOnly,
    LicensesUnavailable,
    TakeoverNoHeartbeat,
    JobHeld,
    InvalidCredTypeChange,
    InvalidTaskMemory,
    InvalidAccount,
    InvalidParentAccount,
    SameParentAccount,
    InvalidLicenses,
    NeedRestart,
    AccountingPolicy,
    InvalidTimeLimit,
    ReservationAccess,
    ReservationInvalid,
    InvalidTimeValue,
    ReservationBusy,
    ReservationNotUsable,
    InvalidWckey,
    ReservationOverlap,
    PortsBusy,
    PortsInvalid,
    PrologRunning,
    NoSteps,
    MissingWorkDir,
    InvalidQos,
    QosPreemptionLoop,
    NodeNotAvail,
    InvalidCpuCount,
    PartitionNotAvail,
    CircularDependency,
    InvalidGres,
    JobNotPending,
    QosThres,
    PartitionInUse,
    StepLimit,
    JobSuspended,
    CanNotStartImmediately,
    InterconnectBusy,
    ReservationEmpty,
    InvalidArray,
    ReservationNameDup,
    JobStarted,
    JobFinished,
    JobNotRunning,
    JobNotPendingNorRunning,
    JobNotSuspended,
    JobNotFinished,
    TriggerDup,
    Internal,
    InvalidBurstBufferChange,
    BurstBufferPermission,
    BurstBufferLimit,
    InvalidBurstBufferRequest,
    PrioResetFail,
    CannotModifyCronJob,
    InvalidJobContainerChange,
    CannotCancelCronJob,
    InvalidMcsLabel,
    BurstBufferWait,
    PartitionDown,
    DuplicateGres,
    RsvAlreadyStarted,
    SubmissionsDisabled,
    NotHetJob,
    NotHetJobLeader,
    NotWholeHetJob,
    CoreReservationUpdate,
    DuplicateStepId,
    InvalidCoreCnt,
    X11NotAvail,
    GroupIdMissing,
    BatchConstraint,
    InvalidTres,
    InvalidTresBillingWeights,
    InvalidJobDefaults,
    ReservationMaint,
    InvalidGresType,
    RebootInProgress,
    MultiKnlConstraint,
    UnsupportedGres,
    InvalidNice,
    InvalidTimeMinLimit,
    Defer,
    ConfiglessDisabled,
    EnvironmentMissing,
    ReservationNoSkip,
    ReservationUserGroup,
    PartitionAssoc,
    InStandbyUseBackup,
    BadThreadPerCore,
    InvalidPrefer,
    InsufficientGres,
    InvalidContainerId,
    EmptyJobId,
    InvalidJobIdZero,
    InvalidJobIdNegative,
    InvalidJobIdTooLarge,
    InvalidJobIdNonNumeric,
    EmptyJobArrayId,
    InvalidJobArrayIdNegative,
    InvalidJobArrayIdTooLarge,
    InvalidJobArrayIdNonNumeric,
    InvalidHetJobAndArray,
    EmptyHetJobComp,
    InvalidHetJobCompNegative,
    InvalidHetJobCompTooLarge,
    InvalidHetJobCompNonNumeric,
    EmptyStepId,
    InvalidStepIdNegative,
    InvalidStepIdTooLarge,
    InvalidStepIdNonNumeric,
    EmptyHetStep,
    InvalidHetStepZero,
    InvalidHetStepNegative,
    InvalidHetStepTooLarge,
    InvalidHetStepNonNumeric,
    InvalidHetStepJob,
    JobTimeoutKilled,
    JobNodeFailKilled,
    EmptyList,
    GroupIdInvalid,
    GroupIdUnknown,
    UserIdInvalid,
    UserIdUnknown,
    InvalidAssoc,
    NodeAlreadyExists,
    NodeTableFull,
    InvalidRelativeQos,
    InvalidExtra,
    JobSignalFailed,
    SignalJobsInvalid,
    ResCoresPerGpuUnique,
    ResCoresPerGpuTopo,
    ResCoresPerGpuNo,
    MaxPoweredNodes,
    RequestedTopoConfigUnavailable,
    PreemptionRequired,
    SpankGeneric,
    SpankBadArg,
    SpankNotTask,
    SpankEnvExists,
    SpankEnvNoexist,
    SpankNospace,
    SpankNotRemote,
    SpankNoexist,
    SpankNotExecd,
    SpankNotAvail,
    SpankNotLocal,
    SlurmdKillTaskFailed,
    SlurmdKillJobAlreadyComplete,
    SlurmdInvalidAcctFreq,
    SlurmdInvalidJobCredential,
    SlurmdCredentialExpired,
    SlurmdCredentialRevoked,
    SlurmdCredentialReplayed,
    SlurmdCreateBatchDir,
    SlurmdSetupEnvironment,
    SlurmdSetUidOrGid,
    SlurmdExecveFailed,
    SlurmdIo,
    SlurmdPrologFailed,
    SlurmdEpilogFailed,
    SlurmdToomanysteps,
    SlurmdStepExists,
    SlurmdJobNotrunning,
    SlurmdStepSuspended,
    SlurmdStepNotsuspended,
    SlurmdInvalidSocketNameLen,
    SlurmdContainerRuntimeInvalid,
    SlurmdCpuBind,
    SlurmdCpuLayout,
    SlurmdTooManyRpcs,
    ProtocolIncompletePacket,
    ProtocolSocketImplTimeout,
    ProtocolSocketZeroBytesSent,
    AuthCredInvalid,
    AuthExpired,
    AuthBadarg,
    AuthUnpack,
    AuthSkip,
    AuthUnableToGenerateToken,
    DbConnection,
    JobsRunningOnAssoc,
    ClusterDeleted,
    OneChange,
    BadName,
    OverAllocate,
    ResultTooLarge,
    DbQueryTooWide,
    DbConnectionInvalid,
    NoRemoveDefaultAccount,
    BadSql,
    NoRemoveDefaultQos,
    CoordNoIncreaseJobLimit,
    FedClusterMaxCnt,
    FedClusterMultipleAssignment,
    InvalidClusterFeature,
    JobNotFederated,
    InvalidClusterName,
    FedJobLock,
    FedNoValidClusters,
    MissingTimeLimit,
    InvalidKnl,
    PluginInvalid,
    PluginIncomplete,
    PluginNotLoaded,
    PluginNotfound,
    PluginAccess,
    PluginDlopenFailed,
    PluginInitFailed,
    PluginMissingName,
    PluginBadVersion,
    RestInvalidQuery,
    RestFailParsing,
    RestInvalidJobsDesc,
    RestEmptyResult,
    RestMissingUid,
    RestMissingGid,
    DataPathNotFound,
    DataPtrNull,
    DataConvFailed,
    DataRegexCompile,
    DataUnknownMimeType,
    DataTooLarge,
    DataFlagsInvalidType,
    DataFlagsInvalid,
    DataExpectedList,
    DataExpectedDict,
    DataAmbiguousModify,
    DataAmbiguousQuery,
    DataParseNothing,
    DataInvalidParser,
    DataParsingDepth,
    DataParserInvalidState,
    ContainerNotConfigured,
    Generic,
};

pub const entries: []const RawEntry = &.{
    .{ error.UnexpectedMsg, 1000, "Unexpected message received" },
    .{ error.CommunicationsConnection, 1001, "Communication connection failure" },
    .{ error.CommunicationsSend, 1002, "Message send failure" },
    .{ error.CommunicationsReceive, 1003, "Message receive failure" },
    .{ error.CommunicationsShutdown, 1004, "Communication shutdown failure" },
    .{ error.ProtocolVersion, 1005, "Incompatible versions of client and server code" },
    .{ error.ProtocolIoStreamVersion, 1006, "I/O stream version number error" },
    .{ error.ProtocolAuthentication, 1007, "Protocol authentication error" },
    .{ error.ProtocolInsaneMsgLength, 1008, "Insane message length" },
    .{ error.MpiPluginNameInvalid, 1009, "Invalid MPI plugin name" },
    .{ error.MpiPluginPrelaunchSetupFailed, 1010, "MPI plugin's pre-launch setup failed" },
    .{ error.PluginNameInvalid, 1011, "Plugin initialization failed" },
    .{ error.UnknownForwardAddr, 1012, "Can't find an address, check slurm.conf" },
    .{ error.CommunicationsMissingSocket, 1013, "Unexpected missing socket error" },
    .{ error.CommunicationsInvalidIncomingFd, 1014, "Unable to process incoming file descriptor" },
    .{ error.CommunicationsInvalidOutgoingFd, 1015, "Unable to process outgoing file descriptor" },
    .{ error.CommunicationsInvalidFd, 1016, "Unable to process incoming and outgoing file descriptors" },
    .{ error.SlurmctldCommunicationsConnection, 1800, "Unable to contact slurm controller (connect failure)" },
    .{ error.SlurmctldCommunicationsSend, 1801, "Unable to contact slurm controller (send failure)" },
    .{ error.SlurmctldCommunicationsReceive, 1802, "Unable to contact slurm controller (receive failure)" },
    .{ error.SlurmctldCommunicationsShutdown, 1803, "Unable to contact slurm controller (shutdown failure)" },
    .{ error.SlurmctldCommunicationsBackoff, 1804, "Rate limit exceeded, please retry momentarily" },
    .{ error.SlurmctldCommunicationsHardDrop, 1805, "Rate limit exceeded, please retry later" },
    .{ error.NoChangeInData, 1900, "Data has not changed since time specified" },
    .{ error.InvalidPartitionName, 2000, "Invalid partition name specified" },
    .{ error.DefaultPartitionNotSet, 2001, "No partition specified or system default partition" },
    .{ error.AccessDenied, 2002, "Access/permission denied" },
    .{ error.JobMissingRequiredPartitionGroup, 2003, "User's group not permitted to use this partition" },
    .{ error.RequestedNodesNotInPartition, 2004, "Requested nodes not in this partition" },
    .{ error.TooManyRequestedCpus, 2005, "More processors requested than permitted" },
    .{ error.InvalidNodeCount, 2006, "Node count specification invalid" },
    .{ error.OnDescToRecordCopy, 2007, "Unable to create job record, try again" },
    .{ error.JobMissingSizeSpecification, 2008, "Job size specification needs to be provided" },
    .{ error.JobScriptMissing, 2009, "Job script not specified" },
    .{ error.UserIdMissing, 2010, "Invalid user id" },
    .{ error.DuplicateJobId, 2011, "Duplicate job id" },
    .{ error.PathnameTooLong, 2012, "Pathname of a file, directory or other parameter too long" },
    .{ error.NotTopPriority, 2013, "Immediate execution impossible, insufficient priority" },
    .{ error.RequestedNodeConfigUnavailable, 2014, "Requested node configuration is not available" },
    .{ error.RequestedPartConfigUnavailable, 2015, "Requested partition configuration not available now" },
    .{ error.NodesBusy, 2016, "Requested nodes are busy" },
    .{ error.InvalidJobId, 2017, "Invalid job id specified" },
    .{ error.InvalidNodeName, 2018, "Invalid node name specified" },
    .{ error.WritingToFile, 2019, "I/O error writing script/environment to file" },
    .{ error.TransitionStateNoUpdate, 2020, "Job can not be altered now, try again later" },
    .{ error.AlreadyDone, 2021, "Job/step already completing or completed" },
    .{ error.InterconnectFailure, 2022, "Error configuring interconnect" },
    .{ error.BadDist, 2023, "Task distribution specification invalid" },
    .{ error.JobPending, 2024, "Job is pending execution" },
    .{ error.BadTaskCount, 2025, "Task count specification invalid" },
    .{ error.InvalidJobCredential, 2026, "Error generating job credential" },
    .{ error.InStandbyMode, 2027, "Slurm backup controller in standby mode" },
    .{ error.InvalidNodeState, 2028, "Invalid node state specified" },
    .{ error.InvalidFeature, 2029, "Invalid feature specification" },
    .{ error.InvalidAuthtypeChange, 2030, "AuthType change requires restart of all Slurm daemons and " },
    .{ error.ActiveFeatureNotSubset, 2031, "Active features not subset of available features" },
    .{ error.InvalidSchedtypeChange, 2032, "SchedulerType change requires restart of the slurmctld daemon " },
    .{ error.InvalidSelecttypeChange, 2033, "SelectType change requires restart of the slurmctld daemon " },
    .{ error.InvalidSwitchtypeChange, 2034, "SwitchType change requires restart of all Slurm daemons and " },
    .{ error.Fragmentation, 2035, "Immediate execution impossible, " },
    .{ error.NotSupported, 2036, "Requested operation not supported on this system" },
    .{ error.Disabled, 2037, "Requested operation is presently disabled" },
    .{ error.Dependency, 2038, "Job dependency problem" },
    .{ error.BatchOnly, 2039, "Only batch jobs are accepted or processed" },
    .{ error.LicensesUnavailable, 2040, "Licenses currently unavailable" },
    .{ error.TakeoverNoHeartbeat, 2041, "Unable to takeover, heartbeat file is missing" },
    .{ error.JobHeld, 2042, "Job is in held state, pending scheduler release" },
    .{ error.InvalidCredTypeChange, 2043, "CredType change requires restart of all Slurm daemons " },
    .{ error.InvalidTaskMemory, 2044, "Memory required by task is not available" },
    .{ error.InvalidAccount, 2045, "Invalid account or account/partition combination specified" },
    .{ error.InvalidParentAccount, 2046, "Invalid parent account specified" },
    .{ error.SameParentAccount, 2047, "Account already child of parent account specified" },
    .{ error.InvalidLicenses, 2048, "Invalid license specification" },
    .{ error.NeedRestart, 2049, "The node configuration changes that were made require restart " },
    .{ error.AccountingPolicy, 2050, "Job violates accounting/QOS policy (job submit limit, user's " },
    .{ error.InvalidTimeLimit, 2051, "Requested time limit is invalid (missing or exceeds some limit)" },
    .{ error.ReservationAccess, 2052, "Access denied to requested reservation" },
    .{ error.ReservationInvalid, 2053, "Requested reservation is invalid" },
    .{ error.InvalidTimeValue, 2054, "Invalid time specified" },
    .{ error.ReservationBusy, 2055, "Requested reservation is in use" },
    .{ error.ReservationNotUsable, 2056, "Requested reservation not usable now" },
    .{ error.InvalidWckey, 2057, "Invalid wckey specification" },
    .{ error.ReservationOverlap, 2058, "Requested reservation overlaps with another reservation" },
    .{ error.PortsBusy, 2059, "Required ports are in use" },
    .{ error.PortsInvalid, 2060, "Requires more ports than can be reserved" },
    .{ error.PrologRunning, 2061, "PrologSlurmctld is still running" },
    .{ error.NoSteps, 2062, "Job steps can not be run on this cluster" },
    .{ error.MissingWorkDir, 2063, "Job cannot be submitted without the current working directory specified." },
    .{ error.InvalidQos, 2066, "Invalid qos specification" },
    .{ error.QosPreemptionLoop, 2067, "QOS Preemption loop detected" },
    .{ error.NodeNotAvail, 2068, "Required node not available (down, drained or reserved)" },
    .{ error.InvalidCpuCount, 2069, "CPU count specification invalid" },
    .{ error.PartitionNotAvail, 2070, "Required partition not available (inactive or drain)" },
    .{ error.CircularDependency, 2071, "Circular job dependency" },
    .{ error.InvalidGres, 2072, "Invalid generic resource (gres) specification" },
    .{ error.JobNotPending, 2073, "Job is no longer pending execution" },
    .{ error.QosThres, 2074, "Requested account has breached requested QOS usage threshold" },
    .{ error.PartitionInUse, 2075, "Partition is in use" },
    .{ error.StepLimit, 2076, "Step limit reached for this job" },
    .{ error.JobSuspended, 2077, "Job is current suspended, requested operation disabled" },
    .{ error.CanNotStartImmediately, 2078, "Job can not start immediately" },
    .{ error.InterconnectBusy, 2079, "Switch resources currently not available" },
    .{ error.ReservationEmpty, 2080, "Reservation request lacks users, groups or accounts" },
    .{ error.InvalidArray, 2081, "Invalid job array specification" },
    .{ error.ReservationNameDup, 2082, "Duplicate reservation name" },
    .{ error.JobStarted, 2083, "Job has already started" },
    .{ error.JobFinished, 2084, "Job has already finished" },
    .{ error.JobNotRunning, 2085, "Job is not running" },
    .{ error.JobNotPendingNorRunning, 2086, "Job is not pending nor running" },
    .{ error.JobNotSuspended, 2087, "Job is not suspended" },
    .{ error.JobNotFinished, 2088, "Job is not finished" },
    .{ error.TriggerDup, 2089, "Duplicate event trigger" },
    .{ error.Internal, 2090, "Slurm internal error, contact system administrator" },
    .{ error.InvalidBurstBufferChange, 2091, "BurstBufferType change requires restart of slurmctld daemon " },
    .{ error.BurstBufferPermission, 2092, "Burst Buffer permission denied" },
    .{ error.BurstBufferLimit, 2093, "Burst Buffer resource limit exceeded" },
    .{ error.InvalidBurstBufferRequest, 2094, "Burst Buffer request invalid" },
    .{ error.PrioResetFail, 2095, "Changes to job priority are not persistent, change nice instead" },
    .{ error.CannotModifyCronJob, 2096, "Cannot modify scrontab jobs through scontrol" },
    .{ error.InvalidJobContainerChange, 2097, "JobContainerType change requires restart of all Slurm daemons and commands to take effect" },
    .{ error.CannotCancelCronJob, 2098, "Cannot cancel scrontab jobs without --cron flag." },
    .{ error.InvalidMcsLabel, 2099, "Invalid mcs_label specified" },
    .{ error.BurstBufferWait, 2100, "Waiting for burst buffer" },
    .{ error.PartitionDown, 2101, "Partition in DOWN state" },
    .{ error.DuplicateGres, 2102, "Duplicate generic resource (gres) specification" },
    .{ error.RsvAlreadyStarted, 2104, "Reservation already started" },
    .{ error.SubmissionsDisabled, 2105, "System submissions disabled" },
    .{ error.NotHetJob, 2106, "Job not heterogeneous job" },
    .{ error.NotHetJobLeader, 2107, "Job not heterogeneous job leader" },
    .{ error.NotWholeHetJob, 2108, "Operation not permitted on individual component of heterogeneous job" },
    .{ error.CoreReservationUpdate, 2109, "Core-based reservation can not be updated" },
    .{ error.DuplicateStepId, 2110, "Duplicate job step id" },
    .{ error.InvalidCoreCnt, 2111, "Core count for reservation node list is not consistent!" },
    .{ error.X11NotAvail, 2112, "X11 forwarding not available" },
    .{ error.GroupIdMissing, 2113, "Invalid group id" },
    .{ error.BatchConstraint, 2114, "Job --batch option is invalid or not a subset of --constraint" },
    .{ error.InvalidTres, 2115, "Invalid Trackable RESource (TRES) specification" },
    .{ error.InvalidTresBillingWeights, 2116, "Invalid TRESBillingWeights specification" },
    .{ error.InvalidJobDefaults, 2117, "Invalid JobDefaults specification" },
    .{ error.ReservationMaint, 2118, "Job can not start due to maintenance reservation." },
    .{ error.InvalidGresType, 2119, "Invalid GRES specification (with and without type identification)" },
    .{ error.RebootInProgress, 2120, "Reboot already in progress" },
    .{ error.MultiKnlConstraint, 2121, "Multiple KNL NUMA and/or MCDRAM constraints require use of a heterogeneous job" },
    .{ error.UnsupportedGres, 2122, "Requested GRES option unsupported by configured SelectType plugin" },
    .{ error.InvalidNice, 2123, "Invalid --nice value" },
    .{ error.InvalidTimeMinLimit, 2124, "Invalid time-min specification (exceeds job's time or other limits)" },
    .{ error.Defer, 2125, "Immediate execution impossible. " },
    .{ error.ConfiglessDisabled, 2126, "ConfigLess mode is disabled in slurm configuration." },
    .{ error.EnvironmentMissing, 2127, "Environment is missing in job" },
    .{ error.ReservationNoSkip, 2128, "Reservation given is not skipable, try deleting instead" },
    .{ error.ReservationUserGroup, 2129, "Reservations can't have users and groups specified, only one or the other" },
    .{ error.PartitionAssoc, 2130, "Multiple partition job request not supported when a partition is set in the association" },
    .{ error.InStandbyUseBackup, 2131, "Controller is in standby mode, try a different controller" },
    .{ error.BadThreadPerCore, 2132, "Cannot request more threads per core than the job allocation" },
    .{ error.InvalidPrefer, 2133, "Invalid preferred feature specification" },
    .{ error.InsufficientGres, 2134, "Insufficient GRES available in allocation" },
    .{ error.InvalidContainerId, 2135, "Invalid container id specified" },
    .{ error.EmptyJobId, 2136, "JobID must not be an empty string" },
    .{ error.InvalidJobIdZero, 2137, "JobID can not be zero" },
    .{ error.InvalidJobIdNegative, 2138, "JobID can not be a negative number" },
    .{ error.InvalidJobIdTooLarge, 2139, "JobID larger than acceptable range" },
    .{ error.InvalidJobIdNonNumeric, 2140, "JobID includes unexpected non-numeric characters" },
    .{ error.EmptyJobArrayId, 2141, "Job Array ID must not be an empty string" },
    .{ error.InvalidJobArrayIdNegative, 2142, "Job Array ID can not be a negative number" },
    .{ error.InvalidJobArrayIdTooLarge, 2143, "Job Array ID larger than acceptable range" },
    .{ error.InvalidJobArrayIdNonNumeric, 2144, "Job Array ID includes unexpected non-numeric characters" },
    .{ error.InvalidHetJobAndArray, 2145, "InvalidHetJobAndArray" },
    .{ error.EmptyHetJobComp, 2146, "HetJob component must not be an empty string" },
    .{ error.InvalidHetJobCompNegative, 2147, "HetJob component can not be a negative number" },
    .{ error.InvalidHetJobCompTooLarge, 2148, "HetJob component larger than acceptable range" },
    .{ error.InvalidHetJobCompNonNumeric, 2149, "InvalidHetJobCompNonNumeric" },
    .{ error.EmptyStepId, 2150, "StepID must not be an empty string" },
    .{ error.InvalidStepIdNegative, 2151, "StepID can not be a negative number" },
    .{ error.InvalidStepIdTooLarge, 2152, "StepID larger than acceptable range" },
    .{ error.InvalidStepIdNonNumeric, 2153, "StepID includes unexpected non-numeric characters" },
    .{ error.EmptyHetStep, 2154, "HetStep component must not be an empty string" },
    .{ error.InvalidHetStepZero, 2155, "HetStep component can not be zero" },
    .{ error.InvalidHetStepNegative, 2156, "HetStep component can not be a negative number" },
    .{ error.InvalidHetStepTooLarge, 2157, "HetStep component larger than acceptable range" },
    .{ error.InvalidHetStepNonNumeric, 2158, "HetStep component includes unexpected non-numeric characters" },
    .{ error.InvalidHetStepJob, 2159, "HetJob can not Het step id" },
    .{ error.JobTimeoutKilled, 2160, "Job killed due hitting max wall clock limit" },
    .{ error.JobNodeFailKilled, 2161, "Job killed due node failure" },
    .{ error.EmptyList, 2162, "Empty list" },
    .{ error.GroupIdInvalid, 2163, "Invalid group ID" },
    .{ error.GroupIdUnknown, 2164, "Unable to resolve group ID to group name" },
    .{ error.UserIdInvalid, 2165, "Invalid user ID" },
    .{ error.UserIdUnknown, 2166, "Unable to resolve user ID to user name" },
    .{ error.InvalidAssoc, 2167, "Invalid or unknown association" },
    .{ error.NodeAlreadyExists, 2168, "Node already exists in the node table" },
    .{ error.NodeTableFull, 2169, "Unable to add node, node table is full" },
    .{ error.InvalidRelativeQos, 2170, "Invalid QOS specification, relative QOS can only be used in a single partition per cluster." },
    .{ error.InvalidExtra, 2171, "Invalid extra constraints specification" },
    .{ error.JobSignalFailed, 2172, "Cannot signal job" },
    .{ error.SignalJobsInvalid, 2173, "Invalid signal jobs request, at least one job id or filter is required." },
    .{ error.ResCoresPerGpuUnique, 2174, "RestrictedCoresPerGPU: Not enough unique cores per GPU" },
    .{ error.ResCoresPerGpuTopo, 2175, "RestrictedCoresPerGPU: Missing core topology for GPUs" },
    .{ error.ResCoresPerGpuNo, 2176, "RestrictedCoresPerGPU: No GPUs configured on node" },
    .{ error.MaxPoweredNodes, 2177, "Max powered up nodes reached" },
    .{ error.RequestedTopoConfigUnavailable, 2178, "Requested topology configuration is not available" },
    .{ error.PreemptionRequired, 2179, "Preemption is required but is disabled on this system" },
    .{ error.SpankGeneric, 3000, "Generic error" },
    .{ error.SpankBadArg, 3001, "Bad argument" },
    .{ error.SpankNotTask, 3002, "Not in task context" },
    .{ error.SpankEnvExists, 3003, "Environment variable exists" },
    .{ error.SpankEnvNoexist, 3004, "No such environment variable" },
    .{ error.SpankNospace, 3005, "Buffer too small" },
    .{ error.SpankNotRemote, 3006, "Valid only in remote context" },
    .{ error.SpankNoexist, 3007, "Id/PID does not exist on this node" },
    .{ error.SpankNotExecd, 3008, "Lookup by PID requested, but no tasks running" },
    .{ error.SpankNotAvail, 3009, "Item not available from this callback" },
    .{ error.SpankNotLocal, 3010, "Valid only in local or allocator context" },
    .{ error.SlurmdKillTaskFailed, 4001, "Kill task failed" },
    .{ error.SlurmdKillJobAlreadyComplete, 4002, "SlurmdKillJobAlreadyComplete" },
    .{ error.SlurmdInvalidAcctFreq, 4003, "Invalid accounting frequency requested" },
    .{ error.SlurmdInvalidJobCredential, 4004, "Invalid job credential" },
    .{ error.SlurmdCredentialExpired, 4007, "Job credential expired" },
    .{ error.SlurmdCredentialRevoked, 4008, "Job credential revoked" },
    .{ error.SlurmdCredentialReplayed, 4009, "Job credential replayed" },
    .{ error.SlurmdCreateBatchDir, 4010, "Slurmd could not create a batch directory or file" },
    .{ error.SlurmdSetupEnvironment, 4014, "Slurmd could not set up environment for batch job" },
    .{ error.SlurmdSetUidOrGid, 4016, "Slurmd could not set UID or GID" },
    .{ error.SlurmdExecveFailed, 4020, "Slurmd could not execve job" },
    .{ error.SlurmdIo, 4021, "Slurmd could not connect IO" },
    .{ error.SlurmdPrologFailed, 4022, "Job prolog failed" },
    .{ error.SlurmdEpilogFailed, 4023, "Job epilog failed" },
    .{ error.SlurmdToomanysteps, 4025, "Too many job steps on node" },
    .{ error.SlurmdStepExists, 4026, "Job step already exists" },
    .{ error.SlurmdJobNotrunning, 4027, "Job step not running" },
    .{ error.SlurmdStepSuspended, 4028, "Job step is suspended" },
    .{ error.SlurmdStepNotsuspended, 4029, "Job step is not currently suspended" },
    .{ error.SlurmdInvalidSocketNameLen, 4030, "Unix socket name exceeded maximum length" },
    .{ error.SlurmdContainerRuntimeInvalid, 4031, "Container runtime not configured or invalid" },
    .{ error.SlurmdCpuBind, 4032, "Unable to satisfy cpu bind request" },
    .{ error.SlurmdCpuLayout, 4033, "Unable to layout tasks on given cpus" },
    .{ error.SlurmdTooManyRpcs, 4034, "SlurmdTooManyRpcs" },
    .{ error.ProtocolIncompletePacket, 5003, "Header lengths are longer than data received" },
    .{ error.ProtocolSocketImplTimeout, 5004, "Socket timed out on send/recv operation" },
    .{ error.ProtocolSocketZeroBytesSent, 5005, "Zero Bytes were transmitted or received" },
    .{ error.AuthCredInvalid, 6000, "Invalid authentication credential" },
    .{ error.AuthExpired, 6001, "Authentication credential expired" },
    .{ error.AuthBadarg, 6004, "Bad argument to plugin function" },
    .{ error.AuthUnpack, 6007, "Cannot unpack credential" },
    .{ error.AuthSkip, 6008, "Authentication does not apply to request" },
    .{ error.AuthUnableToGenerateToken, 6009, "Token Generation failed." },
    .{ error.DbConnection, 7000, "Unable to connect to database" },
    .{ error.JobsRunningOnAssoc, 7001, "Job(s) active, cancel job(s) before remove" },
    .{ error.ClusterDeleted, 7002, "Cluster deleted, commit/rollback immediately" },
    .{ error.OneChange, 7003, "Can only change one at a time" },
    .{ error.BadName, 7004, "Unacceptable name given. (No '.' in name allowed)" },
    .{ error.OverAllocate, 7005, "You can not allocate more than 100% of a resource" },
    .{ error.ResultTooLarge, 7006, "Query result exceeds size limit" },
    .{ error.DbQueryTooWide, 7007, "Too wide of a date range in query" },
    .{ error.DbConnectionInvalid, 7008, "Database connection reference is invalid" },
    .{ error.NoRemoveDefaultAccount, 7009, "You can not remove the default account of a user" },
    .{ error.BadSql, 7010, "There is something internally wrong with the SQL needed for this. Please consult the slurmdbd log for more info." },
    .{ error.NoRemoveDefaultQos, 7011, "This request would make it so some associations would not have access to their default qos." },
    .{ error.CoordNoIncreaseJobLimit, 7012, "Coordinators can not increase job limits beyond the parent ones" },
    .{ error.FedClusterMaxCnt, 7100, "Too many clusters in federation" },
    .{ error.FedClusterMultipleAssignment, 7101, "Clusters can only be assigned to one federation" },
    .{ error.InvalidClusterFeature, 7102, "Invalid cluster feature specification" },
    .{ error.JobNotFederated, 7103, "Not a valid federated job" },
    .{ error.InvalidClusterName, 7104, "Invalid cluster name" },
    .{ error.FedJobLock, 7105, "Job locked by another sibling" },
    .{ error.FedNoValidClusters, 7106, "No eligible clusters for federated job" },
    .{ error.MissingTimeLimit, 8000, "Time limit specification required, but not provided" },
    .{ error.InvalidKnl, 8001, "Invalid KNL configuration (MCDRAM or NUMA option)" },
    .{ error.PluginInvalid, 8002, "Plugin has invalid format or unable to be loaded" },
    .{ error.PluginIncomplete, 8003, "Plugin missing required symbol or function" },
    .{ error.PluginNotLoaded, 8004, "Required plugin type not loaded or initialized" },
    .{ error.PluginNotfound, 8005, "Plugin file not found" },
    .{ error.PluginAccess, 8006, "Plugin access denied" },
    .{ error.PluginDlopenFailed, 8007, "Dlopen of plugin file failed" },
    .{ error.PluginInitFailed, 8008, "Plugin init() callback failed" },
    .{ error.PluginMissingName, 8009, "Plugin name/type/version symbol missing" },
    .{ error.PluginBadVersion, 8010, "Incompatible plugin version" },
    .{ error.RestInvalidQuery, 9000, "Query empty or not RFC7320 compliant" },
    .{ error.RestFailParsing, 9001, "Failure during parsing" },
    .{ error.RestInvalidJobsDesc, 9002, "Jobs description entry not found, empty or not dictionary or list" },
    .{ error.RestEmptyResult, 9003, "Nothing found with query" },
    .{ error.RestMissingUid, 9004, "Missing UNIX user in the system" },
    .{ error.RestMissingGid, 9005, "Missing UNIX group in the system" },
    .{ error.DataPathNotFound, 9200, "Unable to resolve path" },
    .{ error.DataPtrNull, 9201, "Data pointer is NULL" },
    .{ error.DataConvFailed, 9202, "Unable to convert Data type" },
    .{ error.DataRegexCompile, 9203, "Unable to compile regex" },
    .{ error.DataUnknownMimeType, 9204, "MIME type is unknown to any loaded plugins" },
    .{ error.DataTooLarge, 9205, "Data too large to handle" },
    .{ error.DataFlagsInvalidType, 9206, "Data parser expects flags to be a list" },
    .{ error.DataFlagsInvalid, 9207, "Data parser unable to parse invalid flag" },
    .{ error.DataExpectedList, 9208, "Data parser expected a list" },
    .{ error.DataExpectedDict, 9209, "Data parser expected a dictionary or object" },
    .{ error.DataAmbiguousModify, 9210, "Request matched more than one object to modify. Modifications must only apply to a single object. Try adding more properties to make update match a unique object." },
    .{ error.DataAmbiguousQuery, 9211, "Request matched more than one object to query. Request is limited to query of a single matching object." },
    .{ error.DataParseNothing, 9212, "Request to parse empty string rejected" },
    .{ error.DataInvalidParser, 9213, "Invalid parser requested" },
    .{ error.DataParsingDepth, 9214, "Parsing tree too deep. Possible cyclic parsing detected" },
    .{ error.DataParserInvalidState, 9215, "Parser went into an invalid state. Possible library issue." },
    .{ error.ContainerNotConfigured, 10000, "Container support is not configured" },
    .{ error.Generic, -1, "Unspecified error" },
};

test "getError" {
    try getError();
}
